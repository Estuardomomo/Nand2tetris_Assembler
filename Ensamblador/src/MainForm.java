
import java.awt.Component;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.RandomAccessFile;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User_Len
 */
public class MainForm extends javax.swing.JFrame {
    String fileAddress = "";
    SymbolTable tableObject;
    ParserModule parserObject = new ParserModule();
    CodeModule codeObject = new CodeModule();
    int RAMCounter = 16;
    //upload source file
    private void UploadFile(Component a)
    {
     JFileChooser dialog = new JFileChooser();
     FileNameExtensionFilter filter = new FileNameExtensionFilter(".asm files", "asm");
     dialog.setFileFilter(filter);
     if(dialog.showOpenDialog(a) == JFileChooser.APPROVE_OPTION)
     {
         File selectedFile = dialog.getSelectedFile();
         fileAddress = selectedFile.getPath();
         fileAddress = fileAddress.substring(0, fileAddress.length()-3);
         tableObject = new SymbolTable();
         RAMCounter = 16;
     }
    }
    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnUpload = new javax.swing.JButton();
        btnGo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnUpload.setIcon(new javax.swing.ImageIcon("C:\\Users\\User_Len\\Downloads\\load32.png")); // NOI18N
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        btnGo.setIcon(new javax.swing.ImageIcon("C:\\Users\\User_Len\\Downloads\\go32.png")); // NOI18N
        btnGo.setEnabled(false);
        btnGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(291, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnUpload, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(248, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        // Upload a source file
        UploadFile(this);
        //First pass
        try{
            FileReader reader = new FileReader(fileAddress + "asm");
            BufferedReader buffer = new BufferedReader(reader);
            String line = buffer.readLine();
            int lineNum = 0;
            while(line != null)
            {
                line = line.trim();
                if(!line.equals("")){
                    if(line.startsWith("/")){ //in case the current line is only a comment
                    }else if(line.startsWith("(")){ //in case the current line is a label
                        tableObject.addEntry(line.substring(1,line.indexOf(")")), Integer.toString(lineNum));
                    }else{ // in case the current line is an instruction.
                        lineNum++;
                    }
                }
                line = buffer.readLine();
            }
            reader.close();
            buffer.close();
        }catch(IOException e){}
        //Enable the next step
        btnGo.setEnabled(true);
    }//GEN-LAST:event_btnUploadActionPerformed

    private void btnGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoActionPerformed
        // Second Pass
        try{
            File asmFile = new File(fileAddress + "asm");
            File hackFile = new File(fileAddress + "hack");
            RandomAccessFile raf = new RandomAccessFile(hackFile,"rw");
            FileReader reader = new FileReader(asmFile);
            BufferedReader buffer = new BufferedReader(reader);
            String line = buffer.readLine();
            while(line != null){
                line = line.trim();
                if(line.contains("//")){
                    line = line.substring(0,line.indexOf("/"));
                    line = line.trim();
                }
                switch(parserObject.commandType(line)){
                    case "A":
                    {
                        line = line.substring(1, line.length());
                        try{
                            int number = Integer.parseInt(line);
                            line = parserObject.Converter(number);
                        }catch(NumberFormatException excepcion){
                            if(tableObject.contains(line)){
                            line = tableObject.getAddress(line);
                            line = parserObject.Converter(Integer.parseInt(line));
                            }else{
                            tableObject.addEntry(line, Integer.toString(RAMCounter));
                            line = parserObject.Converter(RAMCounter);
                            RAMCounter++;
                            }
                        }
                        raf.writeBytes(line+"\r\n");
                        break;
                    }
                    case "C":{
                        String[] arreglo;
                        if(line.contains("=")){
                            arreglo = line.split("=");
                            line = "111" + codeObject.comp(arreglo[1]) + codeObject.dest(arreglo[0]) + codeObject.jump("");
                        }else{
                            arreglo = line.split(";");
                            line = "111" + codeObject.comp(arreglo[0]) + codeObject.dest("") + codeObject.jump(arreglo[1]);
                        }
                        raf.writeBytes(line+"\r\n");
                        break;
                    }
                }
                line = buffer.readLine();
            }
            reader.close();
            buffer.close();
            raf.close();
        }catch(IOException e){}    
    }//GEN-LAST:event_btnGoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGo;
    private javax.swing.JButton btnUpload;
    // End of variables declaration//GEN-END:variables
}
